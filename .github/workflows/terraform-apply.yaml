name: Terraform Plan and Apply

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'

env:
  TF_WORKSPACE: default
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_infura_api_key: ${{ secrets.INFURA_API_KEY }}
  TF_VAR_github_token: ${{ secrets.GH_TOKEN }}

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.check_changes.outputs.apply }}
    
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # Step 4: Initialize Terraform with S3 Backend
      - name: Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
            -backend-config="key=state" \
            -backend-config="region=${{ vars.AWS_REGION }}"

      # Step 5: Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform plan -out=tfplan

      # Step 6: Check if plan has changes
      - name: Check if plan has changes
        id: check_changes
        run: |
          PLAN_OUTPUT=$(terraform -chdir=terraform plan -no-color)
          echo "$PLAN_OUTPUT"

          if echo "$PLAN_OUTPUT" | grep -q "No changes."; then
            echo "No changes detected."
            echo "{changes_detected}={false}" >> $GITHUB_OUTPUT
          else
            echo "Changes detected."
            echo "{changes_detected}={true}" >> $GITHUB_OUTPUT
          fi

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: true
    environment:
      name: terraform-approval
      # Manual approval required for this environment (set in GitHub UI)
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # Apply Terraform changes
      - name: Apply Terraform
        run: |
          echo "Applying Terraform changes..."
          terraform -chdir=terraform apply "tfplan"
