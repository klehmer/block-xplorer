name: Terraform Plan and Apply

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
  workflow_dispatch:  # This allows manual triggering of the workflow

env:
  TF_WORKSPACE: default
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_infura_api_key: ${{ secrets.INFURA_API_KEY }}
  TF_VAR_github_token: ${{ secrets.GH_TOKEN }}

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 4: Initialize Terraform with S3 Backend
      - name: Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=state" \
            -backend-config="region=${{ secrets.AWS_REGION }}"

      # Step 5: Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform plan -out=tfplan

      # Step 6: Check if plan has changes
      - name: Check if plan has changes
        id: check_changes
        run: |
          terraform -chdir=terraform show -json tfplan > tfplan.json || exit 1
          echo "Terraform Plan JSON output:"
          cat tfplan.json

          if jq -e '.resource_changes | length == 0' tfplan.json; then
            echo "No changes detected."
            echo "apply=false" >> $GITHUB_ENV
          else
            echo "Changes detected."
            echo "apply=true" >> $GITHUB_ENV
          fi

      # Step 7: Trigger Manual Approval if changes exist
      - name: Request Manual Approval if Changes Detected
        if: env.apply == 'true'
        uses: peter-evans/workflow-dispatch@v1
        with:
          repository: ${{ github.repository }}
          workflow: terraform-apply-approval.yml  # The separate workflow file for approval
          ref: main
          inputs:
            apply_changes: "true"

      # Step 8: Terraform Apply (if approved)
      - name: Apply Terraform
        if: env.apply == 'true'
        run: |
          echo "Applying Terraform changes..."
          terraform -chdir=terraform apply "tfplan"
